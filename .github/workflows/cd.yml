name: Crash I.T. CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!README.md'
      - '!docs/**'
      - '!.github/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      FONTAWESOME_NPM_AUTH_TOKEN: ${{secrets.FONTAWESOME_NPM_AUTH_TOKEN}}
      working-directory: .

    strategy:
      matrix:
        node-version: [lts/*]

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.working-directory }}

    steps:
      -
        name: checkout 🛎️
        uses: actions/checkout@v3
      -
        name: setup node 📦
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      -
        name: Get yarn cache directory path 🗂️
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      -
        name: Restore yarn cache 📎
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-
      
      -
        name: Restore nextjs build from cache 📚
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
            ${{ github.workspace }}/**/.eslintcache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('src/**.[jt]sx?', 'src/**.json') }}
          restore-keys: |
               ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      -
        name: Install dependencies 📦
        run: |
          yarn install --non-interactive --immutable --prefer-offline
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      -
        name: typecheck 🪢
        run: |
          yarn type-check
      -
        name: lint 🌡️
        run: |
          yarn eslint --cache
      # -
      #   name: Unit tests
      #   run: |
      #     yarn ci-test:unit
      
      -
        name: build 💣
        run: |
          yarn build
        env:
          # Build for production
          NODE_ENV: production
          # Speed up build: they are linted in a previous step
          NEXTJS_IGNORE_ESLINT: 1
          # Speed up build: they are typechecked in a previous step
          NEXTJS_IGNORE_TYPECHECK: 1
          # Speed up build: don't run if not needed, enable if it becomes needed
          NEXT_DISABLE_SOURCEMAPS: 1
          # Don't send telemetry for ci
          NEXT_TELEMETRY_DISABLED: 1
          # Fully disable sentry registration here (no overhead in build time)
          NEXT_DISABLE_SENTRY: 1
          # Disable sentry source map upload (when not needed)
          NEXT_SENTRY_DRY_RUN: 1
      -
        name: export 📮
        run: |
          yarn export
        env:
          # Build for production
          NODE_ENV: production
      -
        name: Upload artifacts 🪣
        uses: actions/upload-artifact@v2
        with:
          name: crash-it
          path: ${{ github.workspace }}/out
      -
        name: Create a .nojekyll file 📄
        run: |
          touch ${{ github.workspace }}/out/.nojekyll
      -
        name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.2.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: out # The folder the action should deploy.
